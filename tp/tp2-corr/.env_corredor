VERSION=2022.3.6
# prod[uction] or dev[elopment] environment?
CORREDOR_ENV=prod

# Debug mode?
# It presets LOG_* to a specific behavoir
# When not explicitly set, it true when not in production
#
# When set to true, server outputs configuration
# to logger (on 'debug' level, so that might still be suppressed by LOG_LEVEL)
CORREDOR_DEBUG=true

# Where do we listen for GRPC requests?
CORREDOR_ADDR=0.0.0.0:50051

# Is logging enabled
CORREDOR_LOG_ENABLED=true

# Log in pretty, colorful and multiline environment
#
# Otherwise dull but machine readable JSON.
CORREDOR_LOG_PRETTY=true

# Log level we want to output
#
# When not explicitly set is defaults
# to info (or trace, when in debug mode)
# Levels: fatal, error, warn, info, debug, trace, silent
CORREDOR_LOG_LEVEL=info

# Where are proto buffer definitions
#
# They are pulled in via dependencies (see package.json) into
# node_modules and by default that's where we look
#
# You would want to change that if you are a developer and looking to
# change & test the .proto files.
#
# Expects absolute path to the root of the protobuf repository (https://github.com/cortezaproject/corteza-protobuf)
#
# CORREDOR_DEV_CORTEZA_PROTOBUF_PATH

CORREDOR_EXT_DEPENDENCIES_AUTO_UPDATE=true
CORREDOR_EXT_SERVER_SCRIPTS_WATCH=true
CORREDOR_EXT_CLIENT_SCRIPTS_WATCH=true

HTTP_ADDR=:80
DOMAIN=server:80
CORREDOR_SERVER_CERTIFICATES_ENABLED=false

CORREDOR_EXEC_CSERVERS_API_BASEURL_TEMPLATE=http://server:80/api/{service}

CORREDOR_EXT_SEARCH_PATHS=/data/corteza-ext/scripts/

